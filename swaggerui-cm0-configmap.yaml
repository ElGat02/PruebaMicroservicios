apiVersion: v1
data:
  openapi.yaml: "openapi: 3.0.3\ninfo:\n  title: Mascotas API\n  description: API para la gestión de mascotas.\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@mascotas.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n  - url: http://localhost:8080/mascotas/rs\ntags:\n  - name: mascotas\n    description: Todo sobre mascotas\npaths:\n  /mascotas:\n    post:\n      tags:\n        - mascotas\n      summary: Crear una nueva mascota\n      description: Crear una nueva mascota en la base de datos.\n      operationId: crearMascota\n      requestBody:\n        description: Datos de la mascota a crear\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mascota'\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mascota'\n        '400':\n          description: Error al guardar la mascota\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      tags:\n        - mascotas\n      summary: Actualizar una mascota existente\n      description: Actualizar los datos de una mascota existente en la base de datos.\n      operationId: actualizarMascota\n      requestBody:\n        description: Datos de la mascota a actualizar\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MascotaPut'\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mascota'\n        '406':\n          description: Error al actualizar la mascota\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    delete:\n      tags:\n        - mascotas\n      summary: Borrar una mascota\n      description: Borrar una mascota de la base de datos.\n      operationId: borrarMascota\n      parameters:\n        - name: id\n          in: query\n          description: ID de la mascota a borrar\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                type: integer\n        '500':\n          description: Error al borrar la mascota\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  /mascotas/list:\n    get:\n      tags:\n        - mascotas\n      summary: Obtener todas las mascotas\n      description: Obtener todas las mascotas\n      operationId: obtenerTodasLasMascotas\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mascota'\n        '404':\n          description: Mascota no encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  /mascotas/{id}:\n    get:\n      tags:\n        - mascotas\n      summary: Obtener una mascota por su ID\n      description: Obtener los datos de una mascota por su ID.\n      operationId: obtenerMascotaPorID\n      parameters:\n        - name: id\n          in: path\n          description: ID de la mascota a obtener\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mascota'\n        '404':\n          description: Mascota no encontrada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\ncomponents:\n  schemas:\n    Mascota:\n      type: object\n      properties:\n        nombre:\n          type: string\n          example: 'Rex'\n        especie:\n          type: string\n          example: 'Perro'\n        raza:\n          type: string\n          example: 'Labrador'\n          \n    MascotaPut:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        nombre:\n          type: string\n          example: 'Rex'\n        especie:\n          type: string\n          example: 'Perro'\n        raza:\n          type: string\n          example: 'Labrador'\n        \n    ErrorMessage:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: swaggerui
  name: swaggerui-cm0
